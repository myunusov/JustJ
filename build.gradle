apply plugin: "idea"
apply plugin: "eclipse"


description = 'JustJ is a Light POJO IoC and ORM Framework'
version = '1.0.1-SNAPSHOT'

allprojects {
  group = 'org.maxur.justj'
}

subprojects {
  repositories {
    if (mavenProxyUrl) {
      maven {
        url = mavenProxyUrl
      }
    } else {
      mavenLocal()
      mavenCentral()
    }
  }
}

configure(subprojects.findAll {!it.name.contains('sample')}) {
  apply plugin: 'maven'

  uploadArchives {
    repositories.mavenDeployer {
      configuration = configurations.archives

      repository(url: deployRepositoriesUrl + "/releases/") {
        authentication(userName: deployRepositoriesUser, password: deployRepositoriesPassword)
      }

      snapshotRepository(url: deployRepositoriesUrl + "/snapshots/") {
        authentication(userName: deployRepositoriesUser, password: deployRepositoriesPassword)
      }

      pom.project {
        packaging 'pom'
        url 'https://github.com/myunusov/JustJ.git'
        inceptionYear '2014'

        scm {
          url 'scm:git@github.com:myunusov/JustJ.git'
          connection 'scm:git@github.com:myunusov/JustJ.git'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'myunusov'
            name 'Maxim Yunusov'
            email 'myunusov@maxur.org'
            url 'http://www.maxur.org'
            roles {
              role 'Developer'
            }
            timezone '-6'
          }
        }
      }
    }
  }

}

configure(subprojects.findAll {it.name != 'sample'}) {
  apply plugin: "java"

  println('MODULE: ' + name)

  ext.slf4j_version='1.7.7'

  dependencies {
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '2.0.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
  }

  tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  task jars << {
    configurations.compile.each { File file -> println file.name }
  }

// custom tasks for creating source/javadoc jars
  task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

// add javadoc/source jar tasks as artifacts
  artifacts {
    archives sourcesJar
    archives javadocJar
  }
}


task wrapper(type: Wrapper) {
  gradleVersion = '2.0'
}